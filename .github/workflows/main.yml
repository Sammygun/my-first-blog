name: CI-CD-Pipeline-to-AWS-ElasticBeastalk
# прописываем глобальлные переменные 
env:
  EB_PACKAGE_S3_BUCKET_NAME: "adv-it-flask-application-packages"
  EB_APPLICAATION_NAME     : "MyFlask"
  EB_ENVIRONMENT_NAME      : "MyFlask-env" 
  DEPLOY_PACKAGE_NAME      : "flask_app_${{ github.sha }}.zip  
  AWS_REGION_NAME          : "us-west-2"
  # название коммита github.sha 
  
on: 
  push:
    branches:
      - master
      
  jobs:
     my_ci_part:
       runs-on: ubuntu-latest 
       
       #1 git clone 
       steps:
       - name: Git clone our repo    # клонируем наш репозиторий 
       - uses: actions/checkout@v1
      
      # 2 делаем архив 
       - name: Create ZIP deployment package
         run : zip -r ${{ env.DEPLOY_PAKAGE_NAME }} ./ -x *.git*
         # делаем архив даем имя с переменной DEPLOY_PAKAGE_NAM в архив все кроме файлов с расширением .git
       
       # 3 настраиваем доступы в AWS
       - name: Configure my AWS Credentials 
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}  # переменные с нашим доступами которые создали ниже 
           aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}  
           aws-region            : ${{ env.AWS_REGION_NAME}}  # выше смотри глобальную переменную 
       
       - name: Copy Deployment package to S3 bucket     
         run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
  # берем наш архив DEPLOY_PACKAGE_NAME и отправляем его в s3 bucket  EB_PACKAGE_S3_BUCKET_NAME
  
       - name: Print  Happy Message for CI finish   # CI подготовка кода 
         run : echo "CI Pipeline part Finished successfully!" 
         
         
        # настраиваем CD часть  
 my_cd_part:
       runs-on: ubuntu-latest
       needs: [my_ci_part]
      
       steps: 
       - name: Configure my AWS Credentials   # настраиваем доступы 
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}  # переменные с нашим доступами которые создали ниже 
           aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}  
           aws-region            : ${{ env.AWS_REGION_NAME}}  # выше смотри глобальную переменную 
       
       - name: Create new ElasticBeanstalk Application
         run : |
           aws elasticbeanstalk create-application-version \
           --application-name ${{ env.EB_APPLICATION_NAME }} \
           --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }},S3Key="${{ env.DEPLOY_PAKAGE_NAME}}" \
           --version-label "Ver-${{ github.sha }}" \
           --description "CommitSHA-${{ github.sha }}"
           
       - name: Deploy new ElasticBeanstalk Application Version
         run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME  }} --version-label "Ver-${{ github.sha }}"
         # elasticbeanstalk EB_ENVIRONMENT_NAME  наш реальный elasticbeanstalk и какую версию файла и саму версию файлов
         
       - name: Print Happy Message for CD finish 
         run : echo "CD Pipeline part Finished successfully!"
         # последние поздравительное сообщение 
           
           
           
           
           
       
# Нам надо в секреты добавить нашши данные с AWS 
# Settings = Secrets = Add a new secret = Name = MY_AWS_ACCESS_KEY  # будут как env переменные 
# VALUE =  # сам ACCESS KEY вставляем  # будет зашифровано что даже потом прочитать не сможем 
#
# Settings = Secrets = Add a new secret = Name = MY_AWS_SECRET_KEY 
# VALUE = # само значение  secret key # вставь сюда 
#
#Как запустим джобу положит файл в s3 bucket 
#
#
